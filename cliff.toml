# configuration file for git-cliff (0.1.0)

[changelog]
# changelog header
header = """
"""
# template for the changelog body
# https://tera.netlify.app/docs/#introduction
body = """
{% if version -%}
    ## [{{ version | trim_start_matches(pat="v") }}] - {{ timestamp | date(format="%Y-%m-%d") }}
{% else -%}
    ## [Unreleased]
{%- endif %}
{% for group, commits in commits | group_by(attribute="group") -%}
    ### {{ group | upper_first }}
    {% for commit in commits -%}
        {% if commit.scope -%}
            - ({{commit.scope}}) {{ commit.message | upper_first }}
        {% else -%}
            - {{ commit.message | upper_first }}
        {% endif -%}
        {% if commit.breaking -%}
            {% raw %}    {% endraw %}- **BREAKING**: {{commit.breaking_description | upper_first }}
        {% endif -%}
    {% endfor %}
{% endfor -%}
{% if previous.version %}
    {% if version -%}
        [{{ version | trim_start_matches(pat="v") }}]: https://github.com/lukehsiao/zola-pickles/compare/{{ previous.version }}...{{ version }}
    {% else -%}
        [Unreleased]: https://github.com/lukehsiao/zola-pickles/compare/{{ previous.version }}...main
    {% endif -%}
{% endif %}


"""
# remove the leading and trailing whitespaces from the template
trim = true
# changelog footer
footer = """
"""

[git]
# parse the commits based on https://www.conventionalcommits.org
conventional_commits = true
# filter out the commits that are not conventional
filter_unconventional = true
# regex for parsing and grouping commits
commit_parsers = [
    { message = "^feat", group = "Features"},
    { message = "^fix", group = "Bug Fixes"},
    { message = "^doc", group = "Documentation"},
    { message = "^perf", group = "Performance"},
    { message = "^refactor", group = "Refactor"},
    { message = "^style", group = "Styling"},
    { message = "^test", group = "Testing"},
    { message = "^ci", group = "CI/CD"},
    { message = "^build", group = "Build and Dependencies"},
    { message = "^chore\\(release\\): bump", skip = true},
    { message = "^chore", group = "Miscellaneous Tasks"},
    { body = ".*security", group = "Security"},
]
# filter out the commits that are not matched by commit parsers
filter_commits = false
# glob pattern for matching git tags
tag_pattern = "v[0-9]*"
# regex for skipping tags
skip_tags = "v0.1.0-beta.1"
# regex for ignoring tags
ignore_tags = "python-v[0-9]*"
# sort the tags chronologically
date_order = true
# sort the commits inside sections by oldest/newest order
sort_commits = "oldest"
link_parsers = [
    { pattern = "#(\\d+)", href = "https://github.com/lukehsiao/zola-pickles/issues/$1"},
    { pattern = "RFC(\\d+)", text = "ietf-rfc$1", href = "https://datatracker.ietf.org/doc/html/rfc$1"},
]
